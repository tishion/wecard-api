swagger: '2.0'
info:
  version: v1
  title: wecard
  description: A wecard API based on Swagger and built using Node.js
host: wecard.azurewebsites.net
schemes:
  - http
  - https
basePath: /api
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
consumes:
  - application/json
  - text/json
produces:
  - application/json
  - text/json
paths:
  /auth:
    get:
      security: []
      tags:
        - Authentication
      parameters:
        - name: WX-LOGIN-CODE
          in: header
          description: The WX login code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
  /namecard:
    get:
      tags:
        - Namecard
      summary: Get all Namecards of current User
      operationId: namecard_getByCurrentUserId
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Namecard'
    post:
      tags:
        - Namecard
      summary: Create a Namecard
      operationId: namecard_create
      parameters:
        - $ref: '#/parameters/NamecardCreate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Namecard'
    put:
      tags:
        - Namecard
      summary: Update the Namecard
      operationId: namecard_update
      parameters:
        - $ref: '#/parameters/NamecardUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Namecard'
  '/namecard/{id}':
    get:
      tags:
        - Namecard
      summary: Get the Namecard by id
      operationId: namecard_getById
      parameters:
        - $ref: '#/parameters/EntityId'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Namecard'
    delete:
      tags:
        - Namecard
      summary: Delete the Namecard by id
      operationId: namecard_deleteById
      parameters:
        - $ref: '#/parameters/EntityId'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Namecard'
  /cardcase:
    get:
      tags:
        - Cardcase
      summary: Get all Cardcases of current User
      operationId: cardcase_getByCurrentUserId
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Cardcase'
  /cardcaseItem:
    get:
      tags:
        - CardcaseItem
      summary: Get all CardcaseItems by Cardcase id
      operationId: cardcaseItem_getByCardcaseId
      parameters:
        - name: cardcaseId
          type: string
          in: query
          required: true
          description: The Cardcase id
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CardcaseItem'
    post:
      tags:
        - CardcaseItem
      summary: Create a CardcaseItem in Cardcase
      operationId: cardcaseItem_create
      parameters:
        - $ref: '#/parameters/CardcaseItemCreate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardcaseItem'
    put:
      tags:
        - CardcaseItem
      summary: Update a CardcaseItem in Cardcase
      operationId: cardcaseItem_update
      parameters:
        - $ref: '#/parameters/CardcaseItemUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardcaseItem'
  '/cardcaseItem/{id}':
    delete:
      tags:
        - CardcaseItem
      summary: Delete the CardcaseItem by id
      operationId: cardcaseItem_deleteById
      parameters:
        - $ref: '#/parameters/EntityId'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardcaseItem'
  /group:
    post:
      tags:
        - Group
      summary: Create a Group (if not exist)
      operationId: group_create
      parameters:
        - name: wxGroupId
          type: string
          in: query
          required: true
          description: The Group id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
  /groupMember:
    get:
      tags:
        - GroupMember
      summary: Get all GroupMembers by Group id
      operationId: groupMemeber_getbyGroupId
      parameters:
        - name: groupId
          type: string
          in: query
          required: false
          description: The Group id
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/GroupMember'
  /accessrequest:
    get:
      tags:
        - AccessRequest
      summary: Get all AccessRequest sent to current user
      operationId: accessreqeust_get
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AccessRequest'
    post:
      tags:
        - AccessRequest
      summary: Create an AccessRequest
      operationId: accessreqeust_create
      parameters:
        - $ref: '#/parameters/AccessRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccessRequest'
  '/accessrequest/{id}/sign':
    put:
      tags:
        - AccessRequest
      summary: Accept or refuse the AccessRequest by id
      operationId: accessRequest_signeById
      parameters:
        - $ref: '#/parameters/EntityId'
        - name: operation
          in: query
          description: The operation to be performed (accept|reject)
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccessRequest'
definitions:
  User:
    type: object
    properties:
      id:
        type: string
      wxOpenId:
        type: string
      cardcaseId:
        type: string
      token:
        type: string
  Namecard:
    type: object
    properties:
      id:
        type: string
      cardType:
        type: string
      userId:
        type: string
      avatarUri:
        type: string
      name:
        type: string
      phone:
        type: string
      residence:
        type: string
      hometown:
        type: string
      company:
        type: string
      department:
        type: string
      occupation:
        type: string
      school:
        type: string
      major:
        type: string
      grade:
        type: integer
      exCompany:
        type: string
      exDepartment:
        type: string
      exOccupation:
        type: string
      nonpublic:
        type: boolean
      interests:
        type: array
        items:
          type: string 
  Cardcase:
    type: object
    properties:
      id:
        type: string
      userId:
        type: string
  CardcaseItem:
    type: object
    properties:
      id:
        type: string
      userId:
        type: string
      itemId:
        type: string
      itemType:
        type: string
      cardcaseId:
        type: string
      name:
        type: string
      thumbnail:
        type: string
  Group:
    type: object
    properties:
      id:
        type: string
      wxGroupId:
        type: string
  GroupMember:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      userId:
        type: string
      cardId:
        type: string
      hidden:
        type: boolean
  AccessRequest:
    type: object
    properties:
      id:
        type: string
      namecardId:
        type: string
      fromUserId:
        type: string
      toUserId:
        type: string
      status:
        type: integer
parameters:
  EntityId:
    name: id
    type: string
    in: path
    description: The entity id
    required: true
  NamecardCreate:
    name: body
    in: body
    required: true
    description: The Namecard
    schema:
      allOf:
        - $ref: '#/definitions/Namecard'
      required:
        - cardType
        - name
        - phone
        - occupation
        - grade
  NamecardUpdate:
    name: body
    in: body
    required: true
    description: The Namecard
    schema:
      allOf:
        - $ref: '#/definitions/Namecard'
      required:
        - id
  CardcaseItemCreate:
    name: body
    in: body
    required: true
    description: The Cardcase
    schema:
      allOf:
        - $ref: '#/definitions/CardcaseItem'
      required: 
        - itemId
        - itemType
        - cardcaseId
  CardcaseItemUpdate:
    name: body
    in: body
    required: true
    description: The Cardcase
    schema:
      allOf:
        - $ref: '#/definitions/CardcaseItem'
      required: 
        - id
  Group:
    name: body
    in: body
    required: true
    description: The Group
    schema:
      $ref: '#/definitions/Group'
  AccessRequest:
    name: body
    in: body
    required: true
    description: The AccessRequest
    schema:
      $ref: '#/definitions/AccessRequest'